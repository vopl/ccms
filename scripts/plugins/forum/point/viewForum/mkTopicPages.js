let target = request.planData.forum;let pages = global.cache.process({	key:'forum.'+target.id+'.pages',	provider:function()	{		/*			topics_navigate_date: true,			topics_navigate_page: true,			topics_navigate_rpage: true,			topics_navigate_page_size: 20,			topics_navigate_rpage_size: 20,		*/		let res = {};				if(target.topics_navigate_rpage)		{			let topicsAmount = orm.query("SELECT COUNT(*) FROM {ForumPost} WHERE tree_pid IS NULL AND forum_id=$1", target.id)[0].count;			let rpageSize = target.topics_navigate_rpage_size || 20;			res.rpagesAmount = Math.ceil(topicsAmount / rpageSize);			if(!res.rpagesAmount) res.rpagesAmount = 1;		}		if(target.topics_navigate_page)		{			let pagesBegin = orm.query('SELECT DISTINCT page FROM {ForumPost} WHERE forum_id=$1 AND tree_pid IS NULL AND page IS NOT NULL ORDER BY page ASC LIMIT 10', target.id);			if(!pagesBegin.length) pagesBegin = [{page:1}];			let pagesEnd = orm.query('SELECT DISTINCT page FROM {ForumPost} WHERE forum_id=$1 AND tree_pid IS NULL AND page IS NOT NULL AND page>$2 ORDER BY page DESC LIMIT 10', target.id, pagesBegin.back.page);						res.pages = pagesBegin.concat(pagesEnd.reverse()).map(function(v)v.page);		}				if(target.topics_navigate_date)		{			let datesBegin = orm.query('SELECT DISTINCT ctime::DATE FROM {ForumPost} WHERE forum_id=$1 AND tree_pid IS NULL ORDER BY ctime ASC LIMIT 10', target.id);			if(!datesBegin.length) datesBegin = [{ctime:new Date()}];						let datesEnd = orm.query('SELECT DISTINCT ctime::DATE FROM {ForumPost} WHERE forum_id=$1 AND tree_pid IS NULL AND ctime::DATE>$2 ORDER BY ctime DESC LIMIT 10', target.id, datesBegin.back.ctime);					res.dates = datesBegin.concat(datesEnd.reverse()).map(function(v)v.ctime);		}				return res;	},	events:['forum.forum', 'forum.'+target.id+'.topic'],});return pages;